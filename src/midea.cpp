#include "include.h"
#include "midea.h"

IRsendRaw irsend;

uint16_t buf[] = {4400, 4400,
                  550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 550,
                  550, 550, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 1660,
                  550, 550, 550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                  550, 1660, 550, 550, 550, 1660, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
                  550, 1660, 550, 1660, 550, 550, 550, 1660, 550, 550, 550, 550, 550, 550, 550, 550,
                  550, 550, 550, 550, 550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                  550, 5220,
                  4400, 4400,
                  550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 550,
                  550, 550, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 1660,
                  550, 550, 550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                  550, 1660, 550, 550, 550, 1660, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
                  550, 1660, 550, 1660, 550, 550, 550, 1660, 550, 550, 550, 550, 550, 550, 550, 550,
                  550, 550, 550, 550, 550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                  550, 8000};

void getcode(unsigned char A, unsigned char B, unsigned char C)
{
  unsigned char mask = 0x80;
  unsigned int cnt = 2;
  buf[0] = 4400;
  buf[1] = 4400;
  //发A
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & A)
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & (~A))
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  //发B
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & B)
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & (~B))
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  //发C
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & C)
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & (~C))
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }

  buf[cnt++] = 550;
  buf[cnt++] = 5220;
  buf[cnt++] = 4400;
  buf[cnt++] = 4400;

  //发A
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & A)
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & (~A))
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  //发B
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & B)
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & (~B))
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  //发C
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & C)
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  for (mask = 0x80; mask != 0; mask >>= 1)
  {
    buf[cnt++] = 550;
    if (mask & (~C))
      buf[cnt++] = 1660;
    else
      buf[cnt++] = 550;
  }
  buf[cnt++] = 550;
  buf[cnt++] = 8800;

  // Serial.println(cnt);
}

void Midea::sendMideaOpen(unsigned char A, unsigned char B, unsigned char C)
{
  getcode(A, B, C);
  irsend.send(buf, 200, 38);
  Serial.print(sizeof(buf));
}

void Midea::sendMeidi_CLOSE()
{
  uint16_t buf_close[] = {4400, 4400,
                          550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 550,
                          550, 550, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 1660,
                          550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 550, 550, 1660, 550, 1660,
                          550, 1660, 550, 550, 550, 550, 550, 550, 550, 550, 550, 1660, 550, 550, 550, 550,
                          550, 1660, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
                          550, 550, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                          550, 5220,
                          4400, 4400,
                          550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 550,
                          550, 550, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 1660,
                          550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 550, 550, 1660, 550, 1660,
                          550, 1660, 550, 550, 550, 550, 550, 550, 550, 550, 550, 1660, 550, 550, 550, 550,
                          550, 1660, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
                          550, 550, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                          550, 5220,
                          4400, 4400,
                          550, 1660, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 550,
                          550, 550, 550, 1660, 550, 550, 550, 550, 550, 1660, 550, 1660, 550, 550, 550, 1660,
                          550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
                          550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                          550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
                          550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660, 550, 1660,
                          550, 8000};
  irsend.send(buf_close, 200, 38);
}
// IRsendRaw irsend;
// void Midea::sendMideaOpen(unsigned char A, unsigned char B, unsigned char C)
// {
//   getcode(A, B, C);
//   irsend.send(buf, 200, 38);
//   Serial.print(sizeof(buf));
// }